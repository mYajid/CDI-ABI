<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="photoContact.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>